Name : Stalin Srinivasan.S
Gender: Male
Age: 22
D.O.B:29/09/1988
State: Tamilnadu
Nationality: Indian
qualification:btech 
Dept:Information Technology 
Address: 46A,Piramuthu vilai,Thoothukudi-628001
Pincode: 628001
mobile:9791945315 

 











/*	File Name  : Classifychar.c
 *	Date       : 13-07-2010
 *	Author     : Stalin Srinivasan.S
 *	Description: To Classify the input character type
*/

	#include<stdio.h>
	#include<ctype.h>

	int main(void)
	{
                char c;
		printf("\n");
		printf("Press any key to be classified: ");
		scanf("%c",&c);
		if(isprint(c))			/* checking it is printable or any ctrl special keys */
		{
			printf("\nPrintable->");
	        	if(isgraph(c))
			{
				printf("Graphical->");
				if(isalnum(c))
				{
					printf("Alphanum->");
					if(isalpha(c))
					{
						printf("Alpha->");
						if(isupper(c))
						{
							printf("Uppercase Character");
						}
						else
						{
							printf("Lowercase Character");
						}
					}
					else
					{
						printf("Digit");
					}
				}
				else if(ispunct(c))
				{
					printf("Punctuation Symbol");
				}
			}
			else if(isspace(c))
			{
				printf("Space Character");
			}
		}
		else if(iscntrl(c))
		{
			printf("Control Key");
		}
		printf("\n\n");
		return 0;
	}	
/*	File Name  : cmdarg.c
 *	Date       : 13-07-2010
 *	Author     : Stalin Srinivasan.S
 *	Description: To demonstrate command line arguments
 */

#include<stdio.h>

	int main(int argc, char *argv[])
	{
		int j;
		printf("no of commandline arg is %d",argc-1); /* since exe file also considered as a cmd lin arg */
		if(argc==1)
		{
			printf("\nNo command line arguments");
		}
		else
		{
			for(j=1;j<argc;j++)
			{
				printf("\n%s",argv[j]);
				printf("\n");
			}
		}
		printf("\n\n");
		return 0;
	}
/*	File Name      : env.c
 *	Date           : 13-07-2010
 *	Author	       : Stalin Srinivasan.S
 *	Description    : to display the environment variables
 */

#include<stdio.h>
#include<stdlib.h>

	int main(int argc,char *argv[],char *environ[]) /* each environ variable be element of array of strings */
	{
		int i=0;
		while(environ[i]!=NULL)
		{
			printf("%s\n",environ[i]);
			i++;
		}
		return 0;
	}
/*      File Name   : envset.c
 *	Date        : 13-07-2010
 *	Author      : Stalin Srinivasan.S
 *	Description : to set the values for environmental variables
 */

#include<stdio.h>
#include<stdlib.h>

int main(int argc,char *argv[],char *environ[])
{
	int r;
	char *p;
	r=setenv("nisar","nec",1); /* setting env. variable nisar and its value */
	if(!r)
	{
		printf("\nEnvironment variable set successfully");
	}
	else
	{
		printf("\nSorry to say, not set. better luck next time");
	}
	p=getenv("nisar");
	printf("\nYours environment variable value is %s\n",p);
	r=unsetenv("nisar"); /* unsetting env. variable nisar */
	if(!r)
	{
		printf("\nUnset successfully");
		p=getenv("nisar");
		printf("\nyours unset environment variable is %s",p);
	}
	else
	{
		printf("try again");
	}
	printf("\n\n");
	return 0;
}
/*	File Name  : findsize.c
 *	Date       : 13-07-2010
 *	Author     : Stalin Srinivasan.S 
 *	Description: to find the size of the basic data types
 */

	#include<stdio.h>
	#include<math.h>

	int main(void)
	{
		int s,choice;
		double r;
		printf("\nChoose the type be analysed for its range\n");
		printf("\n1.int 2.char 3.float 4.double 5.void -- ");
		scanf("%d",&choice);
		switch(choice)
		{
			case 1:
			{
				printf("\nSize of int type is %d",sizeof(int));	
				s=8*sizeof(int);
				r=pow(2,s);
				printf("\nRange of int: 0 to %.0lf",r-1);
				r=r/2;
				printf("\nRange of signed int: %.0lf to %.0lf",-r,r-1);
				s=8*sizeof(short int);
				r=pow(2,s);
				printf("\nRange of short int: 0 to  %.0lf",r-1); 
				break;
			}
			case 2:
			{
				printf("\nSize of char type is %d",sizeof(char));
				s=8*sizeof(char);
				r=pow(2,s);
				printf("\nRange of char: 0 to %.0lf",r-1);
				r=r/2;
				printf("\nRange of signed char: %.0lf to %.0lf",-r,r-1);
				break;
			}
			case 3:
			{
				printf("\nSize of float type is %d",sizeof(float));
				s=8*sizeof(float);
				r=pow(2,s);
				printf("\nRange of float: 0 to %.0lf",r-1);
				break;
			}
			case 4:
			{
				printf("\nSize of double type is %d",sizeof(double));
				s=8*sizeof(double);
				r=pow(2,s);
				printf("\nRange of double type: 0 to %.0lf",r-1);
				break;
			}
			case 5:
			{
				printf("\nSize of void type is %d",sizeof(void));
				s=8*sizeof(void);
				r=pow(2,s);
				printf("\nRange of  void type: 0 to %.0lf",r-1);
				break;
			}
			default:
			{
				printf("\nPlease enter the valid choice");
				break;
			}
		}
		printf("\n\n");
		return 0;
	}	
/*	File Name  : findsize.c
 *	Date       : 13-07-2010
 *	Author     : Stalin Srinivasan.S 
 *	Description: to find the size of the basic data types
 */

	#include<stdio.h>
	#include<math.h>

	int main(void)
	{
		int s,choice;
		printf("\nChoose the type be analysed for its size: ");
		printf("\n1.int 2.char 3.float 4.double 5.void -- ");
		scanf("%d",&choice);
		switch(choice)
		{
			case 1:
			{
				printf("\nSize of int type is %d",sizeof(int));
				printf("\nSize of short int is %d",sizeof(short int));
				printf("\nSize of long int is %d",sizeof(long int));
				printf("\nSize of signed int is %d",sizeof(signed int));
				break;
			}
			case 2:
			{
				printf("\nSize of char type is %d",sizeof(char));
				printf("\nSize of signed char type is %d",sizeof(signed char));
				break;
			}
			case 3:
			{
				printf("\nSize of float type is %d",sizeof(float));
				break;
			}
			case 4:
			{
				printf("\nSize of double type is %d",sizeof(double));
				printf("\nSize of long double is %d",sizeof(long double));  
				break;
			}
			case 5:
			{
				printf("\nSize of void type is %d",sizeof(void));
				break;
			}
			default:
			{
				printf("\nPlease enter the valid choice");
				break;
			}
		}
		printf("\n\n");
		return 0;
	}	
